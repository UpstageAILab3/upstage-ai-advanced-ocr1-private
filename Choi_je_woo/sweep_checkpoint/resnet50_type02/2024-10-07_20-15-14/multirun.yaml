hydra:
  run:
    dir: outputs/${exp_name}
  sweep:
    dir: sweep_checkpoint/${exp_name}/${now:%Y-%m-%d_%H-%M-%S}
    subdir: ${hydra.job.id}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    root:
      level: ERROR
    disable_existing_loggers: true
  job_logging:
    version: 1
    root:
      level: ERROR
    disable_existing_loggers: true
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=MULTIRUN
    task:
    - preset=example
    - exp_name=resnet50_type02
    - wandb=True
    - models.optimizer.lr=0.001,0.002,0.003
    - models.optimizer.weight_decay=0.0001,0.0002,0.0003
  job:
    name: train
    chdir: null
    override_dirname: exp_name=resnet50_type02,models.optimizer.lr=0.001,0.002,0.003,models.optimizer.weight_decay=0.0001,0.0002,0.0003,preset=example,wandb=True
    id: ???
    num: ???
    config_name: train
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.2'
    cwd: /root
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /root/baseline_code/configs
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: ???
    choices:
      preset: example
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: disabled
      hydra/hydra_logging: disabled
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
seed: 42
exp_name: resnet50_type02
project_name: OCRProject
wandb: true
exp_version: v1.0
resume: null
trainer:
  max_epochs: 20
  num_sanity_val_steps: 1
  log_every_n_steps: 50
  check_val_every_n_epoch: 1
  deterministic: true
dataset_path: ocr.datasets
model_path: ocr.models
encoder_path: ocr.models.encoder
decoder_path: ocr.models.decoder
head_path: ocr.models.head
loss_path: ocr.models.loss
lightning_path: ocr.lightning_modules
log_dir: outputs/${exp_name}/logs
checkpoint_dir: outputs/${exp_name}/checkpoints/
submission_dir: outputs/${exp_name}/submissions
dataset_base_path: /root/data/datasets/
datasets:
  train_dataset:
    _target_: ${dataset_path}.OCRDataset
    image_path: ${dataset_base_path}images/train
    annotation_path: ${dataset_base_path}jsons/train.json
    transform: ${transforms.train_transform}
  val_dataset:
    _target_: ${dataset_path}.OCRDataset
    image_path: ${dataset_base_path}images/val
    annotation_path: ${dataset_base_path}jsons/val.json
    transform: ${transforms.val_transform}
  test_dataset:
    _target_: ${dataset_path}.OCRDataset
    image_path: ${dataset_base_path}images/val
    annotation_path: ${dataset_base_path}jsons/val.json
    transform: ${transforms.test_transform}
  predict_dataset:
    _target_: ${dataset_path}.OCRDataset
    image_path: ${dataset_base_path}images/test
    annotation_path: null
    transform: ${transforms.test_transform}
transforms:
  train_transform:
    _target_: ${dataset_path}.DBTransforms
    transforms:
    - _target_: albumentations.LongestMaxSize
      max_size: 640
      p: 1.0
    - _target_: albumentations.PadIfNeeded
      min_width: 640
      min_height: 640
      border_mode: 0
      p: 1.0
    - _target_: albumentations.HorizontalFlip
      p: 0.5
    - _target_: albumentations.Normalize
      mean:
      - 0.485
      - 0.456
      - 0.406
      std:
      - 0.229
      - 0.224
      - 0.225
    keypoint_params:
      _target_: albumentations.KeypointParams
      format: xy
      remove_invisible: true
  val_transform:
    _target_: ${dataset_path}.DBTransforms
    transforms:
    - _target_: albumentations.LongestMaxSize
      max_size: 640
      p: 1.0
    - _target_: albumentations.PadIfNeeded
      min_width: 640
      min_height: 640
      border_mode: 0
      p: 1.0
    - _target_: albumentations.Normalize
      mean:
      - 0.485
      - 0.456
      - 0.406
      std:
      - 0.229
      - 0.224
      - 0.225
    keypoint_params:
      _target_: albumentations.KeypointParams
      format: xy
      remove_invisible: true
  test_transform:
    _target_: ${dataset_path}.DBTransforms
    transforms:
    - _target_: albumentations.LongestMaxSize
      max_size: 640
      p: 1.0
    - _target_: albumentations.PadIfNeeded
      min_width: 640
      min_height: 640
      border_mode: 0
      p: 1.0
    - _target_: albumentations.Normalize
      mean:
      - 0.485
      - 0.456
      - 0.406
      std:
      - 0.229
      - 0.224
      - 0.225
    keypoint_params:
      _target_: albumentations.KeypointParams
      format: xy
      remove_invisible: true
  predict_transform:
    _target_: ${dataset_path}.DBTransforms
    transforms:
    - _target_: albumentations.LongestMaxSize
      max_size: 640
      p: 1.0
    - _target_: albumentations.PadIfNeeded
      min_width: 640
      min_height: 640
      border_mode: 0
      p: 1.0
    - _target_: albumentations.Normalize
      mean:
      - 0.485
      - 0.456
      - 0.406
      std:
      - 0.229
      - 0.224
      - 0.225
    keypoint_params: null
dataloaders:
  train_dataloader:
    batch_size: 16
    shuffle: true
    num_workers: 4
  val_dataloader:
    batch_size: 16
    shuffle: false
    num_workers: 4
  test_dataloader:
    batch_size: 16
    shuffle: false
    num_workers: 4
  predict_dataloader:
    batch_size: 1
    shuffle: false
    num_workers: 4
collate_fn:
  _target_: ${dataset_path}.DBCollateFN
  shrink_ratio: 0.4
  thresh_min: 0.3
  thresh_max: 0.7
models:
  decoder:
    _target_: ${decoder_path}.UNet
    in_channels:
    - 256
    - 512
    - 1024
    - 2048
    strides:
    - 4
    - 8
    - 16
    - 32
    inner_channels: 256
    output_channels: 64
    bias: false
  encoder:
    _target_: ${encoder_path}.TimmBackbone
    model_name: resnet50
    select_features:
    - 1
    - 2
    - 3
    - 4
    pretrained: true
  head:
    _target_: ${head_path}.DBHead
    in_channels: 256
    upscale: 4
    k: 50
    bias: false
    smooth: false
    postprocess:
      thresh: 0.3
      box_thresh: 0.4
      max_candidates: 300
      use_polygon: false
  loss:
    _target_: ${loss_path}.DBLoss
    negative_ratio: 3.0
    eps: 1.0e-06
    prob_map_loss_weight: 5.0
    thresh_map_loss_weight: 10.0
    binary_map_loss_weight: 1.0
  optimizer:
    _target_: torch.optim.Adam
    lr: 0.001
    weight_decay: 0.0001
  scheduler:
    _target_: torch.optim.lr_scheduler.StepLR
    step_size: 100
    gamma: 0.1
modules:
  lightning_module:
    _target_: ${lightning_path}.OCRPLModule
  lightning_data_module:
    _target_: ${lightning_path}.OCRDataPLModule
